{"version":3,"sources":["index.js"],"names":["numSysOptions","label","value","encodingOptions","emoji","require","options","i","unicode","length","tmpDict","getName","push","skinTones","name","EmojiFactory","props","codeSeparationHandler","event","setState","codeSeparation","translateTextHandler","text","target","result","len","Math","ceil","log","pow","state","encodingFormat","numSys","parseInt","codePointAt","toString","padStart","textCodes","encodingHandler","inputDisabled","numSysHandler","decodingHandler","decodingFormat","emojiSelectHandler","tmp","emojiSeq","resetDisabled","skinToneSelectHandler","zwjSelectHandler","String","fromCodePoint","concatenatedEmojis","join","emojiSequence","map","item","removeEmoji","pop","utfConvertHandler","arr","Array","from","utfCode","translateText","selectedEmoji","lastSignZWJ","this","href","title","className","output","onChange","placeholder","checked","disabled","type","class","showStrCodes","search","size","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2db41d72.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SelectSearch from 'react-select-search';\nimport Select from \"react-dropdown-select\";\nimport Switch from \"react-switch\";\nimport Button from 'react-bootstrap/Button'\n\n\nconst numSysOptions = [{ label: \"Bin√§r\", value: 2 }, { label: \"Oktal\", value: 8 }, { label: \"Dezimal\", value: 10 }, { label: \"Hexadezimal\", value: 16 }];\nconst encodingOptions = [{ label: \"ASCII (7 Bit)\", value: 7 }, { label: \"Unicode (UTF-8)\", value: 8 }];\n\nconst emoji = require(\"emoji-dictionary\");\nlet options = [];\nfor (let i = 0; i < emoji.unicode.length; i++) {\n  let tmpDict = {}\n  tmpDict[\"name\"] = emoji.unicode[i] + \" - \" + emoji.getName(emoji.unicode[i]);\n  tmpDict[\"value\"] = emoji.unicode[i];\n\n  options.push(tmpDict);\n}\nlet skinTones = [];\nskinTones.push({ name: \"Skin Type 1-2\", value: \"\\u{1f3fb}\" })\nskinTones.push({ name: \"Skin Type 3\", value: \"\\u{1f3fc}\" })\nskinTones.push({ name: \"Skin Type 4\", value: \"\\u{1f3fd}\" })\nskinTones.push({ name: \"Skin Type 5\", value: \"\\u{1f3fe}\" })\nskinTones.push({ name: \"Skin Type 6\", value: \"\\u{1f3ff}\" })\n\n\nfunction hex2emoji(emojis) {\n  let code = ''\n  for (let i = 0; i < emojis; i++) {\n    code = code + String.fromCodePoint(\"0x\" + emojis[i]) + String.fromCodePoint(\"0x\" + \"200d\");\n  }\n  return code;\n}\n\nclass EmojiFactory extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      translateText: '',\n      selectedEmoji: '',\n      utfCode: [],\n      encodingFormat: '',\n      numSys: '',\n      codeSeparation: true,\n      text: '',\n      textCodes: [],\n      inputDisabled: true,\n      lastSignZWJ: false,\n      emojiSeq: [],\n      resetDisabled: true\n    };\n  }\n\n  codeSeparationHandler = (event) => {\n    this.setState({ codeSeparation: event });\n  }\n\n  translateTextHandler = (event) => {\n    let text = event.target.value;\n    this.setState({ text: text });\n\n    let result = [];\n    let len = Math.ceil(1.0 * Math.log(Math.pow(2, this.state.encodingFormat)) / Math.log(this.state.numSys));\n    for (let i = 0; i < text.length; i++) {\n      if (this.state.encodingFormat == 7 && parseInt(text[i].codePointAt(0).toString(16), 16) > 127) {\n        result.push('?')\n      } else {\n        result.push(parseInt(text[i].codePointAt(0).toString(16), 16).toString(this.state.numSys).padStart(len, '0'));\n      }\n\n    }\n    this.setState({ textCodes: result });\n  }\n\n  parseCodes() {\n    let result = '';\n    for (let i = 0; i < this.state.textCodes.length; i++) {\n      result = result + this.state.textCodes[i];\n      if (this.state.codeSeparation) {\n        result = result + ' ';\n      }\n    }\n\n    return result;\n  }\n\n  encodingHandler = (event) => {\n    this.setState({ encodingFormat: event[0].value });\n    if (this.state.numSys != '') {\n      this.setState({ inputDisabled: false })\n    }\n  }\n\n  numSysHandler = (event) => {\n    this.setState({ numSys: event[0].value });\n    if (this.state.encodingFormat != '') {\n      this.setState({ inputDisabled: false })\n    }\n  }\n\n  decodingHandler = (event) => {\n    this.setState({ decodingFormat: event[0].label });\n  }\n\n  showStr2hex() {\n\n    let result = []\n    for (let i = 0; i < this.state.translateText.length; i++) {\n      result.push(<span href=\" \" title={this.state.translateText[i]} className=\"word\">{this.state.translateText[i].codePointAt(0).toString(16)}</span>);\n    }\n    return result;\n  }\n\n  showStrCodes() {\n    let result = \"\";\n    let len = Math.ceil(1.0 * Math.log(Math.pow(2, this.state.encodingFormat)) / Math.log(this.state.numSys));\n    for (let i = 0; i < this.state.text.length; i++) {\n      if (this.state.encodingFormat == 7 && parseInt(this.state.text[i].codePointAt(0).toString(16), 16) > 127) {\n        result = result + '?'\n      } else {\n        result = result + parseInt(this.state.text[i].codePointAt(0).toString(16), 16).toString(this.state.numSys).padStart(len, '0');\n      }\n      if (this.state.codeSeparation) {\n        result = result + \" \";\n      }\n    }\n    return result;\n  }\n\n  showStr() {\n    return\n  }\n\n  showStr2utf8() {\n    let arr = Array.from(this.state.translateText);\n    let result = []\n    for (let i = 0; i < arr.length; i++) {\n      result.push(<span href=\" \" title={arr[i]} className=\"word\">{arr[i]}</span>);\n    }\n    return result;\n  }\n\n  showStrRepresentation() {\n    let arr = Array.from(this.state.translateText);\n\n    if (this.state.decodingFormat == \"ASCII\") {\n      for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i].codePointAt(0).toString(16), 16) > 127) {\n          arr[i] = \"???\";\n        }\n      }\n      let result = []\n      for (let i = 0; i < arr.length; i++) {\n        result.push(<span href=\" \" title={arr[i]} className=\"word\">{arr[i]}</span>);\n      }\n      return result;\n    } else if (this.state.decodingFormat == \"Unicode\") {\n      let result = []\n      for (let i = 0; i < arr.length; i++) {\n        result.push(<span href=\" \" title={arr[i]} className=\"word\">{arr[i]}</span>);\n      }\n      return result;\n    }\n\n\n  }\n\n  emojiSelectHandler = (event) => {\n    let tmp = this.state.emojiSeq;\n    tmp.push(event)\n    this.setState({ emojiSeq: tmp});\n    if(tmp.length > 0){\n      this.setState({resetDisabled: false});\n    }\n  }\n\n  skinToneSelectHandler = (event) => {\n    let tmp = this.state.emojiSeq;\n    tmp.push(event)\n    this.setState({ emojiSeq: tmp});\n    if(tmp.length > 0){\n      this.setState({resetDisabled: false});\n    }\n  }\n\n  zwjSelectHandler = () => {\n    let tmp = this.state.emojiSeq;\n    tmp.push(String.fromCodePoint(\"0x\" + \"200d\"))\n    this.setState({ emojiSeq: tmp});\n    if(tmp.length > 0){\n      this.setState({resetDisabled: false});\n    }\n  }\n\n  concatenatedEmojis = () => {\n    if(this.state.emojiSeq.length > 0){\n      return(\"= \" + this.state.emojiSeq.join(''));\n    } else{\n      return(\"\");\n    }\n  }\n\n  emojiSequence = () => {\n    if(this.state.emojiSeq.length > 0){\n      let tmp = this.state.emojiSeq;\n      tmp = tmp.map(function(item) { return item == String.fromCodePoint(\"0x\" + \"200d\") ? \"ZWJ\" : item; });\n      return(tmp.join(\" + \"));\n    } else {\n      return(\"\");\n    }\n  }\n\n  removeEmoji = () => {\n    let tmp = this.state.emojiSeq;\n    tmp.pop()\n    this.setState({ emojiSeq: tmp});\n    if(tmp.length < 1){\n      this.setState({resetDisabled: true});\n    }\n  }\n\n  utfConvertHandler = (event) => {\n    let arr = Array.from(event.target.value);\n    this.setState({ utfCode: arr });\n  }\n\n  showUTFConversion() {\n    let arr = [];\n    for (let i = 0; i < this.state.utfCode.length; i++) {\n      arr.push(this.state.utfCode[i].codePointAt(0).toString(16));\n    }\n\n    if (arr.length > 0) {\n      let output = ''\n      for (let i = 0; i < arr.length - 1; i++) {\n        output += String.fromCodePoint(\"0x\" + arr[i]) + String.fromCodePoint(\"0x\" + \"200d\");\n      }\n      output += String.fromCodePoint(\"0x\" + arr[arr.length - 1]);\n\n      return <span className=\"emoji-span\">{output}</span>;\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-8 center-bar\">\n            <div className=\"text-right\">Contact: <a href=\"mailto:hooljohannes@gmail.com\">Johannes Hool</a></div>\n            <div className=\"rounded text-center title-container\">\n              <h1>Zeichen und deren Codierung</h1>\n            </div>\n            <div className=\"col-lg-12\">\n              <div className=\"rounded text-center title-container\">\n                <h3>Zeichen √ºbersetzen</h3>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4 vertical-center\">\n                  <Select className=\"select-input white-background\" options={encodingOptions} onChange={this.encodingHandler} placeholder=\"W√§hle Codierungssystem\" />\n                </div>\n                <div className=\"col-md-4 vertical-center\">\n                  <Select className=\"select-input white-background\" options={numSysOptions} onChange={this.numSysHandler} placeholder=\"W√§hle Zahlensystem\" />\n                </div>\n                <div className=\"col-md-4 vertical-center\">\n                  <span className=\"margin-right\">Leerzeichen zwischen Zeichencodes </span>\n                  <Switch onChange={this.codeSeparationHandler} checked={this.state.codeSeparation} />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"rounded text-center title-container-faded\">\n                    <h4>Zeichenkette</h4>\n                  </div>\n                  <textarea disabled={this.state.inputDisabled} type='text' class=\"flex-fill form-control prop-field auto-wrap\" onChange={this.translateTextHandler} value={this.state.text} placeholder=\"Lege Codierungs- und Zahlensystem fest\" />\n\n                </div>\n                <div className=\"col-lg-12\">\n                  <div className=\"rounded text-center title-container-faded\">\n                    <h4>Zeichencodes</h4>\n                  </div>\n                  <div className=\" rounded auto-wrap margin-bottom\">\n                    {this.showStrCodes()}\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n\n            <div className=\"col-lg-12\">\n              <div className=\"rounded text-center title-container\">\n                <h3>Emoji Generator</h3>\n              </div>\n              <p><b>Beispiele:</b></p>\n              <ul>\n                <li>üë© + üèΩ + ZWJ + üöÄ = üë©üèΩ‚ÄçüöÄ</li>\n                <li>üê± + ZWJ + üöÄ = üê±‚ÄçüöÄ</li>\n                <li>üë® + ZWJ + ‚ù§Ô∏è + ZWJ + üë® = üë®‚Äç‚ù§Ô∏è‚Äçüë®</li>\n              </ul>\n              <div className=\"col-md-6\">\n                <div className=\"rounded text-center title-container-faded\">\n                  <h4>Zeichen hinzuf√ºgen</h4>\n                </div>\n                <b>Emoji hinzuf√ºgen</b>\n                <SelectSearch options={options} onChange={this.emojiSelectHandler} search=\"true\" placeholder=\"Suche\" />\n                <br></br><b>Hautfarbe hinzuf√ºgen</b>\n                <SelectSearch options={skinTones} onChange={this.skinToneSelectHandler} search=\"true\" placeholder=\"Suche\" />\n                <br></br><b>Zero Width Joiner hinzuf√ºgen</b><br></br>\n                <Button size=\"sm\" onClick={this.zwjSelectHandler}>ZWJ hinzuf√ºgen</Button>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"rounded text-center title-container-faded\">\n                  <h4>Resultat</h4>\n                </div>\n                <div className=\"big-text\">{this.emojiSequence()}</div>\n                <div className=\"bigger-text\">{this.concatenatedEmojis()}</div>\n                <div className=\"margin-top\">\n                  <Button disabled={this.state.resetDisabled} size=\"sm\" onClick={this.removeEmoji}>Entferne letztes Symbol</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ============================================================\n\nReactDOM.render(\n  <EmojiFactory />,\n  document.getElementById('root')\n);"],"sourceRoot":""}